import cv2
import numpy as np
import matplotlib.pyplot as plt
x = cv2.imread(r"/content/Screenshot (2).png", cv2.IMREAD_GRAYSCALE)

if x is None:
    raise FileNotFoundError("Image not found. Make sure 'cameraman.jpg' exists or provide the correct path.")
r, c = x.shape

# Initialize histogram for 256 levels (0â€“255)
h = np.zeros(256, dtype=int)

# Manually compute histogram
for i in range(r):
    for j in range(c):
        h[x[i, j]] += 1

# Equalization
tp = r * c  # Total pixels
pdf = h / tp  # Probability density function
cdf = np.cumsum(pdf)  # Cumulative distribution function
eqtable = np.round(cdf * 255).astype(int)  # Mapping table

# Apply transformation
out2 = np.zeros_like(x)
for i in range(r):
    for j in range(c):
        out2[i, j] = eqtable[x[i, j]]

# Convert to uint8
out2 = np.uint8(out2)

# Display
plt.figure(figsize=(10, 8))

plt.subplot(2, 2, 1)
plt.imshow(x, cmap='gray')
plt.title('Original Image')

plt.subplot(2, 2, 2)
plt.imshow(out2, cmap='gray')
plt.title('Histogram Equalized Image')

plt.subplot(2, 2, 3)
plt.hist(x.ravel(), bins=256, range=(0, 255), color='black')
plt.title('Histogram of Original Image')

plt.subplot(2, 2, 4)
plt.hist(out2.ravel(), bins=256, range=(0, 255), color='black')
plt.title('Histogram of Equalized Image')

plt.tight_layout()
plt.show()
